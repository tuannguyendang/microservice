plugins {
    id 'org.springframework.boot' version '2.3.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'com.dangtuan'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
repositories {
    mavenCentral()
    mavenLocal()
}
ext {
    set('springCloudVersion', "Hoxton.SR6")
}

dependencies {
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'
    implementation 'com.auth0:java-jwt:3.8.2'
//    implementation 'com.dangtuan:common-dto:0.0.1-SNAPSHOT changing = true'
    implementation 'org.mapstruct:mapstruct:1.3.1.Final'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-oauth2'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation "org.liquibase:liquibase-core:3.10.0"
    compile 'io.springfox:springfox-boot-starter:3.0.0'
    compile('org.apache.commons:commons-lang3:3.9')
    compile 'commons-io:commons-io:2.7'
    compile 'javax.inject:javax.inject:1'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
test {
    useJUnitPlatform()
}
