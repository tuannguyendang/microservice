server:
  port: 8766
  servlet:
    context-path: /delivery-service
    max-http-header-size: 61440
    tomcat:
      max-http-post-size: 5MB

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: delivery
    password: 123456
    validationQuery: SELECT 1
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: true
        default_schema: delivery_db
  zipkin:
    enabled: true

ribbon:
  connectTimeout: 10000
  readTimeout: 10000
logging:
  file: ./logs/delivery-server.log
  level:
    org:
      springframework:
        cloud: debug
        web: debug
        security: debug
    com:
      dangtuan: debug

app:
  public-key: public_key.txt

  allowed-endpoints:
    - /oauth/**
    - /actuator/**

kafka:
  bootstrapAddress: localhost:9092
  delivery:
    topic:
      name: delivery
      group: DELIVERY_SERVICE
  order:
    topic:
      name: order
      group: ORDER_SERVICE
sentry:
  dsn: {your_url}
  exception-resolver-order: 2147483647

management:
  metrics:
    export:
      prometheus:
        pushgateway:
          enabled: true
  endpoints:
    web:
      exposure:
        include: prometheus, info, health