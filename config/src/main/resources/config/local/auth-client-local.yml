spring:
    datasource:
        url: jdbc:mysql://localhost:3306/oauth_client?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
        username: root
        password: 123456

    jpa:
        show-sql: true
        hibernate:
            ddl-auto: update
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    security:
      oauth2:
        client:
          registration:
            google:
              clientId: {client_id}
              clientSecret: { clientSecret }
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - profile
            facebook:
              clientId: { clientId }
              clientSecret: { clientSecret }
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - public_profile
            github:
              clientId: {clientId}
              clientSecret: { clientSecret }
              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - user:email
                - read:user
            apple:
              client-id: apple-client-id
              client-secret: apple-client-secret
              authorization-grant-type: authorization_code
              redirect-uri: '{baseUrl}/oauth2/code/{registrationId}'
              scope: openid, name, email
              client-name: Apple
              client-authentication-method: post
            myoauth:
              clientId: clientId
              clientSecret: 123456
              authorizationGrantType: password
              scope: read, write
          provider:
            facebook:
              authorizationUri: https://www.facebook.com/v12.0/dialog/oauth
              tokenUri: https://graph.facebook.com/v12.0/oauth/access_token
              userInfoUri: https://graph.facebook.com/v12.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
            google:
              authorizationUri: https://accounts.google.com/o/oauth2/v2/auth?access_type=offline
            apple:
              authorization-uri: https://appleid.apple.com/auth/authorize?response_mode=form_post
              token-uri: https://appleid.apple.com/auth/token
              jwk-set-uri: https://appleid.apple.com/auth/keys
            myoauth:
              tokenUri: http://localhost:8763/auth-server/oauth/token
app:
  auth:
    tokenExpirationMsec: 864000000
    token-key-alias: ms-oauth-server
    token-key-store: auth-server.jks
    token-key-store-pass: Day@123
    token-key-pair-pass: Nation@123
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect